{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\losem\\\\UNI\\\\WebEngineering\\\\Project\\\\lol-app\\\\client\\\\src\\\\components\\\\myAccount\\\\MyAccount.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutPlayer } from \"../../actions/authActions\";\nimport axios from \"axios\";\n\nclass MyAccount extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  getPlayer() {\n    axios.get('http://localhost:8000/test/getplayerById/' + this.props.auth._id).then(response => {\n      console.log(response.data), this.setState({\n        players: response.data.data,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.getPlayer();\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    const {\n      player\n    } = this.props.auth;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Leaderboard\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nMyAccount.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutPlayer\n})(MyAccount);","map":{"version":3,"sources":["C:/Users/losem/UNI/WebEngineering/Project/lol-app/client/src/components/myAccount/MyAccount.js"],"names":["React","Component","PropTypes","connect","logoutPlayer","axios","MyAccount","state","players","isLoading","errors","getPlayer","get","props","auth","_id","then","response","console","log","data","setState","catch","error","componentDidMount","render","player","propTypes","object","isRequired","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAG9BM,KAH8B,GAGtB;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KAHsB;AAAA;;AAS9BC,EAAAA,SAAS,GAAG;AACRN,IAAAA,KAAK,CAACO,GAAN,CAAU,8CAA8C,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAxE,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,GACA,KAAKC,QAAL,CAAc;AACVb,QAAAA,OAAO,EAAES,QAAQ,CAACG,IAAT,CAAcA,IADb;AAEVX,QAAAA,SAAS,EAAC;AAFA,OAAd,CADA;AAKH,KAPL,EAQKa,KARL,CAQWC,KAAK,IAAI,KAAKF,QAAL,CAAc;AAAEE,MAAAA,KAAF;AAASd,MAAAA,SAAS,EAAE;AAApB,KAAd,CARpB;AASH;;AAEDe,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,SAAL;AACH;;AAGDc,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEhB,MAAAA;AAAF,QAAgB,KAAKF,KAA3B;AACA,UAAM;AAAEmB,MAAAA;AAAF,QAAa,KAAKb,KAAL,CAAWC,IAA9B;AAGA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAE,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAQH;;AAvC6B;;AA0ClCR,SAAS,CAACqB,SAAV,GAAsB;AAClBb,EAAAA,IAAI,EAAEZ,SAAS,CAAC0B,MAAV,CAAiBC;AADL,CAAtB;;AAIA,MAAMC,eAAe,GAAGvB,KAAK,KAAK;AAC9BO,EAAAA,IAAI,EAAEP,KAAK,CAACO;AADkB,CAAL,CAA7B;;AAIA,eAAeX,OAAO,CAClB2B,eADkB,EAElB;AAAE1B,EAAAA;AAAF,CAFkB,CAAP,CAGbE,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutPlayer } from \"../../actions/authActions\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nclass MyAccount extends Component {\r\n\r\n\r\n    state = {\r\n        players: [],\r\n        isLoading: true,\r\n        errors: null\r\n    };\r\n\r\n    getPlayer() {\r\n        axios.get('http://localhost:8000/test/getplayerById/' + this.props.auth._id)\r\n            .then(response => {\r\n                console.log(response.data),\r\n                this.setState({\r\n                    players: response.data.data,\r\n                    isLoading:false\r\n                });\r\n            })\r\n            .catch(error => this.setState({ error, isLoading: false}))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPlayer();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isLoading } = this.state;\r\n        const { player } = this.props.auth;\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h3 className={\"center-align\"}>Leaderboard</h3>\r\n                <div className= \"center-align\">\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nMyAccount.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutPlayer }\r\n)(MyAccount);"]},"metadata":{},"sourceType":"module"}