{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\losem\\\\UNI\\\\WebEngineering\\\\Project\\\\lol-app\\\\client\\\\src\\\\components\\\\myStatistics\\\\MyStatistics.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutPlayer } from \"../../actions/authActions\";\n\nclass Leaderboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutPlayer();\n    };\n\n    this.state = {\n      soloqueue: [],\n      flexqueue: [],\n      accountstats: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  getRankedStats() {\n    axios.get('http://localhost:8000/riotapi/rankedstats/' + this.props.auth.player.id).then(response => {\n      console.log(\"rankedstats:\");\n      console.log(response.data.body[0]);\n      this.setState({\n        soloqueue: response.data.body,\n        flexqueue: response.data.body,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  getAccountStats(summonername) {\n    axios.get('http://localhost:8000/riotapi/lolacc/' + this.props.auth.player.id).then(response => {\n      console.log(\"accstats:\");\n      console.log(response.data);\n      this.setState({\n        accountstats: response.data,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.getAccountStats();\n    this.getRankedStats();\n  }\n\n  render() {\n    const {\n      isLoading,\n      soloqueue,\n      flexqueue\n    } = this.state;\n    console.log(\"soloqueue:\");\n    console.log(soloqueue);\n    console.log(\"flexqueue:\");\n    console.log(flexqueue);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"My Stats\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, !isLoading ? soloqueue.map(player => {\n      const {\n        tier,\n        rank,\n        summonerName,\n        summonerId\n      } = player;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: summonerId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }\n      }, tier, \". \", \" \", rank, \" \", \" \", \" \", \" \", summonerName, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 37\n        }\n      }));\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"Loading...\")));\n  }\n\n}\n\nLeaderboard.propTypes = {\n  logoutPlayer: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutPlayer\n})(Leaderboard);","map":{"version":3,"sources":["C:/Users/losem/UNI/WebEngineering/Project/lol-app/client/src/components/myStatistics/MyStatistics.js"],"names":["React","Component","axios","PropTypes","connect","logoutPlayer","Leaderboard","onLogoutClick","e","preventDefault","props","state","soloqueue","flexqueue","accountstats","isLoading","errors","getRankedStats","get","auth","player","id","then","response","console","log","data","body","setState","catch","error","getAccountStats","summonername","componentDidMount","render","map","tier","rank","summonerName","summonerId","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutPlayer} from \"../../actions/authActions\";\r\n\r\n\r\nclass Leaderboard extends Component {\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutPlayer();\r\n    };\r\n\r\n    state = {\r\n        soloqueue: [],\r\n        flexqueue: [],\r\n        accountstats: [],\r\n        isLoading: true,\r\n        errors: null\r\n    };\r\n\r\n    getRankedStats() {\r\n        axios.get('http://localhost:8000/riotapi/rankedstats/' + this.props.auth.player.id)\r\n            .then(response => {\r\n                console.log(\"rankedstats:\")\r\n                console.log(response.data.body[0]);\r\n                this.setState({\r\n                    soloqueue: response.data.body,\r\n                    flexqueue: response.data.body,\r\n                    isLoading:false\r\n                });\r\n            })\r\n            .catch(error => this.setState({ error, isLoading: false}))\r\n    }\r\n\r\n    getAccountStats(summonername) {\r\n        axios.get('http://localhost:8000/riotapi/lolacc/' +this.props.auth.player.id)\r\n            .then(response => {\r\n                console.log(\"accstats:\")\r\n                console.log(response.data);\r\n                this.setState({\r\n                    accountstats: response.data,\r\n                    isLoading: false\r\n                });\r\n            })\r\n            .catch(error => this.setState({error, isLoading: false}))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAccountStats();\r\n        this.getRankedStats();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { isLoading, soloqueue, flexqueue } = this.state;\r\n\r\n        console.log(\"soloqueue:\")\r\n        console.log(soloqueue)\r\n        console.log(\"flexqueue:\")\r\n        console.log(flexqueue)\r\n\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <h3 className={\"center-align\"}>My Stats</h3>\r\n                <div className= \"center-align\">\r\n                    {!isLoading ? (\r\n                        soloqueue.map(player => {\r\n                            const { tier, rank, summonerName, summonerId } = player;\r\n                            return (\r\n                                <div key={ summonerId }>\r\n                                    { tier }. {\" \"}\r\n                                    { rank } {\" \"} {\" \"}\r\n                                    { summonerName}\r\n                                    <hr />\r\n                                </div>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <p>Loading...</p>\r\n                    )}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nLeaderboard.propTypes = {\r\n    logoutPlayer: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutPlayer }\r\n)(Leaderboard);"]},"metadata":{},"sourceType":"module"}