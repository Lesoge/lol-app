{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\losem\\\\UNI\\\\WebEngineering\\\\Project\\\\lol-app\\\\client\\\\src\\\\components\\\\leaderboard\\\\Leaderboard.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Leaderboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  getPlayers() {\n    axios.get('http://localhost:8000/test/getplayers').then(response => {\n      this.setState({\n        players: response.data.data,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.getPlayers();\n  }\n\n  renderTableData(Array) {\n    var x = 1;\n    return Array.map(player => {\n      const {\n        _id,\n        elo,\n        username\n      } = player;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: _id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, x++), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, username), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, elo));\n    });\n  }\n\n  renderTableHeader(Array) {\n    let header = Object.keys(Array[0]);\n    return header.map((key, index) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 20\n        }\n      }, key.toUpperCase());\n    });\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    const sortArray = [].concat(this.state.players).sort((a, b) => b.elo - a.elo);\n    var x = 1;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Leaderboard\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"students\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, this.renderTableHeader(sortArray)), this.renderTableData(sortArray))));\n  }\n\n}\n/*\r\n<React.Fragment>\r\n    <h3 className={\"center-align\"}>Leaderboard</h3>\r\n\r\n    <div className= \"center-align\" >\r\n        <h5> Place </h5>\r\n        {!isLoading ? (\r\n\r\n        );\r\n        })\r\n        ) : (\r\n        <p>Loading...</p>\r\n        )}\r\n    </div>\r\n</React.Fragment>\r\n*/\n\n\nexport default Leaderboard;","map":{"version":3,"sources":["C:/Users/losem/UNI/WebEngineering/Project/lol-app/client/src/components/leaderboard/Leaderboard.js"],"names":["React","Component","axios","Leaderboard","state","players","isLoading","errors","getPlayers","get","then","response","setState","data","catch","error","componentDidMount","renderTableData","Array","x","map","player","_id","elo","username","renderTableHeader","header","Object","keys","key","index","toUpperCase","render","sortArray","concat","sort","a","b"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCG,KAFgC,GAExB;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KAFwB;AAAA;;AAQhCC,EAAAA,UAAU,GAAG;AACTN,IAAAA,KAAK,CAACO,GAAN,CAAU,uCAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AACVP,QAAAA,OAAO,EAAEM,QAAQ,CAACE,IAAT,CAAcA,IADb;AAEVP,QAAAA,SAAS,EAAC;AAFA,OAAd;AAIH,KANL,EAOKQ,KAPL,CAOWC,KAAK,IAAI,KAAKH,QAAL,CAAc;AAAEG,MAAAA,KAAF;AAAST,MAAAA,SAAS,EAAE;AAApB,KAAd,CAPpB;AAQH;;AAEDU,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,UAAL;AACH;;AAEDS,EAAAA,eAAe,CAACC,KAAD,EAAQ;AACnB,QAAIC,CAAC,GAAG,CAAR;AACA,WAAOD,KAAK,CAACE,GAAN,CAAUC,MAAM,IAAI;AACvB,YAAM;AAAEC,QAAAA,GAAF;AAAOC,QAAAA,GAAP;AAAYC,QAAAA;AAAZ,UAAyBH,MAA/B;AACA,0BACI;AAAI,QAAA,GAAG,EAAEC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,CAAC,EAAN,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKK,QAAL,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,GAAL,CAHJ,CADJ;AAOH,KATM,CAAP;AAUH;;AAEDE,EAAAA,iBAAiB,CAACP,KAAD,EAAQ;AACrB,QAAIQ,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYV,KAAK,CAAC,CAAD,CAAjB,CAAb;AACA,WAAOQ,MAAM,CAACN,GAAP,CAAW,CAACS,GAAD,EAAMC,KAAN,KAAgB;AAC9B,0BAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBD,GAAG,CAACE,WAAJ,EAAjB,CAAP;AACH,KAFM,CAAP;AAGH;;AAGDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAE1B,MAAAA;AAAF,QAAgB,KAAKF,KAA3B;AACA,UAAM6B,SAAS,GAAG,GAAGC,MAAH,CAAU,KAAK9B,KAAL,CAAWC,OAArB,EACb8B,IADa,CACR,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACd,GAAF,GAAQa,CAAC,CAACb,GADZ,CAAlB;AAEA,QAAIJ,CAAC,GAAG,CAAR;AAEA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAO,MAAA,EAAE,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKM,iBAAL,CAAuBQ,SAAvB,CAAL,CADJ,EAEK,KAAKhB,eAAL,CAAqBgB,SAArB,CAFL,CADJ,CAFJ,CAFJ;AAcH;;AAjE+B;AAoEpC;;;;;;;;;;;;;;;;;;AAkBA,eAAe9B,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Leaderboard extends Component {\r\n\r\n    state = {\r\n        players: [],\r\n        isLoading: true,\r\n        errors: null\r\n    };\r\n\r\n    getPlayers() {\r\n        axios.get('http://localhost:8000/test/getplayers')\r\n            .then(response => {\r\n                this.setState({\r\n                    players: response.data.data,\r\n                    isLoading:false\r\n                });\r\n            })\r\n            .catch(error => this.setState({ error, isLoading: false}))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPlayers();\r\n    }\r\n\r\n    renderTableData(Array) {\r\n        var x = 1;\r\n        return Array.map(player => {\r\n            const { _id, elo, username } = player\r\n            return (\r\n                <tr key={_id}>\r\n                    <td>{x++}</td>\r\n                    <td>{username}</td>\r\n                    <td>{elo}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderTableHeader(Array) {\r\n        let header = Object.keys(Array[0])\r\n        return header.map((key, index) => {\r\n            return <th key={index}>{key.toUpperCase()}</th>\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isLoading } = this.state;\r\n        const sortArray = [].concat(this.state.players)\r\n            .sort((a, b) => b.elo - a.elo);\r\n        var x = 1;\r\n\r\n        return (\r\n\r\n            <div>\r\n                <h1 id='title'>Leaderboard</h1>\r\n                <table id='students'>\r\n                    <tbody>\r\n                        <tr>{this.renderTableHeader(sortArray)}</tr>\r\n                        {this.renderTableData(sortArray)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n<React.Fragment>\r\n    <h3 className={\"center-align\"}>Leaderboard</h3>\r\n\r\n    <div className= \"center-align\" >\r\n        <h5> Place </h5>\r\n        {!isLoading ? (\r\n\r\n        );\r\n        })\r\n        ) : (\r\n        <p>Loading...</p>\r\n        )}\r\n    </div>\r\n</React.Fragment>\r\n*/\r\n\r\n\r\nexport default Leaderboard;"]},"metadata":{},"sourceType":"module"}