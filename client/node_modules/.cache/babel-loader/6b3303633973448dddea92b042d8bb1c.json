{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_PLAYER, PLAYER_LOADING } from \"./types\";\nexport const loadLolacc = req => {\n  axios.get(\"http://localhost:8000/riotapi/lolacc\", req).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const loadRankedstats = req => {\n  console.log(req.body);\n  axios.get(\"http://localhost:8000/riotapi/rankedstats\", req).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};","map":{"version":3,"sources":["C:/Users/losem/UNI/WebEngineering/Project/lol-app/client/src/actions/riotStats.js"],"names":["axios","GET_ERRORS","SET_CURRENT_PLAYER","PLAYER_LOADING","loadLolacc","req","get","catch","err","dispatch","type","payload","response","data","loadRankedstats","console","log","body"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,UADJ,EAEIC,kBAFJ,EAGIC,cAHJ,QAIO,SAJP;AAMA,OAAO,MAAMC,UAAU,GAAGC,GAAG,IAAI;AAC7BL,EAAAA,KAAK,CACAM,GADL,CACS,sCADT,EACiDD,GADjD,EAEKE,KAFL,CAEWC,GAAG,IACNC,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAET,UADD;AAELU,IAAAA,OAAO,EAAEH,GAAG,CAACI,QAAJ,CAAaC;AAFjB,GAAD,CAHhB;AAQH,CATM;AAWP,OAAO,MAAMC,eAAe,GAAGT,GAAG,IAAI;AAClCU,EAAAA,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACY,IAAhB;AACAjB,EAAAA,KAAK,CACAM,GADL,CACS,2CADT,EACsDD,GADtD,EAEKE,KAFL,CAEWC,GAAG,IAAIC,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET,UAAR;AAAoBU,IAAAA,OAAO,EAAEH,GAAG,CAACI,QAAJ,CAAaC;AAA1C,GAAD,CAF1B;AAGH,CALM","sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n    GET_ERRORS,\r\n    SET_CURRENT_PLAYER,\r\n    PLAYER_LOADING\r\n} from \"./types\";\r\n\r\nexport const loadLolacc = req => {\r\n    axios\r\n        .get(\"http://localhost:8000/riotapi/lolacc\", req)\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n}\r\n\r\nexport const loadRankedstats = req => {\r\n    console.log(req.body)\r\n    axios\r\n        .get(\"http://localhost:8000/riotapi/rankedstats\", req)\r\n        .catch(err => dispatch({ type: GET_ERRORS, payload: err.response.data}));\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}