{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\losem\\\\UNI\\\\WebEngineering\\\\Project\\\\lol-app\\\\client\\\\src\\\\components\\\\leaderboard\\\\Leaderboard.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [{\n  id: 'placement',\n  label: 'Placement'\n}, {\n  id: 'username',\n  label: 'Username'\n}, {\n  id: 'elo',\n  label: 'Elo'\n}];\nconst rows = [sortArray.map(player => {\n  const {\n    _id,\n    elo,\n    username\n  } = player;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, x++, \". \", \" \", username, \" \", \" \", \" \", \" \", elo, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }));\n})];\n\nclass Leaderboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  getPlayers() {\n    axios.get('http://localhost:8000/test/getplayers').then(response => {\n      this.setState({\n        players: response.data.data,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.getPlayers();\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    const sortArray = [].concat(this.state.players).sort((a, b) => b.elo - a.elo);\n    var x = 1;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Leaderboard\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, !isLoading ? sortArray.map(player => {\n      const {\n        _id,\n        elo,\n        username\n      } = player;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: _id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }\n      }, x++, \". \", \" \", username, \" \", \" \", \" \", \" \", elo, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 37\n        }\n      }));\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default Leaderboard;","map":{"version":3,"sources":["C:/Users/losem/UNI/WebEngineering/Project/lol-app/client/src/components/leaderboard/Leaderboard.js"],"names":["React","Component","axios","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","rows","sortArray","map","player","_id","elo","username","x","Leaderboard","state","players","isLoading","errors","getPlayers","get","then","response","setState","data","catch","error","componentDidMount","render","concat","sort","a","b"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst columns = [\r\n    { id: 'placement', label: 'Placement'},\r\n    { id: 'username', label: 'Username'},\r\n    { id: 'elo', label: 'Elo'}\r\n];\r\n\r\nconst rows = [\r\n    sortArray.map(player => {\r\n        const { _id, elo, username } = player;\r\n        return (\r\n            <div key={_id}>\r\n                { x++ }. {\" \"}\r\n                {username} {\" \"} {\" \"}\r\n                {elo}\r\n                <hr />\r\n            </div>\r\n        );\r\n    })\r\n]\r\n\r\n\r\nclass Leaderboard extends Component {\r\n\r\n    state = {\r\n        players: [],\r\n        isLoading: true,\r\n        errors: null\r\n    };\r\n\r\n    getPlayers() {\r\n        axios.get('http://localhost:8000/test/getplayers')\r\n            .then(response => {\r\n                this.setState({\r\n                    players: response.data.data,\r\n                    isLoading:false\r\n                });\r\n            })\r\n            .catch(error => this.setState({ error, isLoading: false}))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPlayers();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { isLoading } = this.state;\r\n        const sortArray = [].concat(this.state.players)\r\n            .sort((a, b) => b.elo - a.elo);\r\n        var x = 1;\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <h3 className={\"center-align\"}>Leaderboard</h3>\r\n\r\n                <div className= \"center-align\" >\r\n                    {!isLoading ? (\r\n                        sortArray.map(player => {\r\n                            const { _id, elo, username } = player;\r\n                            return (\r\n                                <div key={_id}>\r\n                                    { x++ }. {\" \"}\r\n                                    {username} {\" \"} {\" \"}\r\n                                    {elo}\r\n                                    <hr />\r\n                                </div>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <p>Loading...</p>\r\n                    )}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Leaderboard;"]},"metadata":{},"sourceType":"module"}