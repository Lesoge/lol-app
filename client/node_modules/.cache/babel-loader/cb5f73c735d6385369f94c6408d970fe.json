{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\losem\\\\UNI\\\\WebEngineering\\\\Project\\\\lol-app\\\\client\\\\src\\\\components\\\\myStatistics\\\\MyStatistics.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Leaderboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rankedstats: [],\n      accountstats: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  getRankedStats(summonername) {\n    axios.get('http://localhost:8000/riotapi/rankedstats', summonername).then(response => {\n      this.setState({\n        rankedstats: response.data,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  getAccountStats(summonername) {\n    axios.get('http://localhost:8000/riotapi/lolacc', summonername).then(response => {\n      console.log(response.data);\n      this.setState({\n        accountstats: response.data,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.getAccountStats();\n    this.getRankedStats();\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    const sortArray = [].concat(this.state.players).sort((a, b) => b.elo - a.elo);\n    var x = 1;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, \"Leaderboard\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, !isLoading ? sortArray.map(player => {\n      const {\n        _id,\n        elo,\n        username\n      } = player;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: _id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      }, x++, \". \", \" \", username, \" \", \" \", \" \", \" \", elo, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }\n      }));\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default Leaderboard;","map":{"version":3,"sources":["C:/Users/losem/UNI/WebEngineering/Project/lol-app/client/src/components/myStatistics/MyStatistics.js"],"names":["React","Component","axios","Leaderboard","state","rankedstats","accountstats","isLoading","errors","getRankedStats","summonername","get","then","response","setState","data","catch","error","getAccountStats","console","log","componentDidMount","render","sortArray","concat","players","sort","a","b","elo","x","map","player","_id","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCG,KAFgC,GAExB;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,SAAS,EAAE,IAHP;AAIJC,MAAAA,MAAM,EAAE;AAJJ,KAFwB;AAAA;;AAShCC,EAAAA,cAAc,CAACC,YAAD,EAAe;AACzBR,IAAAA,KAAK,CAACS,GAAN,CAAU,2CAAV,EAAuDD,YAAvD,EACKE,IADL,CACUC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AACVT,QAAAA,WAAW,EAAEQ,QAAQ,CAACE,IADZ;AAEVR,QAAAA,SAAS,EAAC;AAFA,OAAd;AAIH,KANL,EAOKS,KAPL,CAOWC,KAAK,IAAI,KAAKH,QAAL,CAAc;AAAEG,MAAAA,KAAF;AAASV,MAAAA,SAAS,EAAE;AAApB,KAAd,CAPpB;AAQH;;AAEDW,EAAAA,eAAe,CAACR,YAAD,EAAe;AAC1BR,IAAAA,KAAK,CAACS,GAAN,CAAU,sCAAV,EAAkDD,YAAlD,EACKE,IADL,CACUC,QAAQ,IAAI;AACdM,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACE,IAArB;AACA,WAAKD,QAAL,CAAc;AACVR,QAAAA,YAAY,EAAEO,QAAQ,CAACE,IADb;AAEVR,QAAAA,SAAS,EAAE;AAFD,OAAd;AAIH,KAPL,EAQKS,KARL,CAQWC,KAAK,IAAI,KAAKH,QAAL,CAAc;AAACG,MAAAA,KAAD;AAAQV,MAAAA,SAAS,EAAE;AAAnB,KAAd,CARpB;AASH;;AAEDc,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,eAAL;AACA,SAAKT,cAAL;AACH;;AAIDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEf,MAAAA;AAAF,QAAgB,KAAKH,KAA3B;AACA,UAAMmB,SAAS,GAAG,GAAGC,MAAH,CAAU,KAAKpB,KAAL,CAAWqB,OAArB,EACbC,IADa,CACR,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,GAAF,GAAQF,CAAC,CAACE,GADZ,CAAlB;AAEA,QAAIC,CAAC,GAAG,CAAR;AAEA,wBAEI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAE,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACvB,SAAD,GACGgB,SAAS,CAACQ,GAAV,CAAcC,MAAM,IAAI;AACpB,YAAM;AAAEC,QAAAA,GAAF;AAAOJ,QAAAA,GAAP;AAAYK,QAAAA;AAAZ,UAAyBF,MAA/B;AACA,0BACI;AAAK,QAAA,GAAG,EAAEC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACMH,CAAC,EADP,QACc,GADd,EAEKI,QAFL,OAEgB,GAFhB,OAEsB,GAFtB,EAGKL,GAHL,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAQH,KAVD,CADH,gBAaG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdR,CAFJ,CAFJ;AAuBH;;AApE+B;;AA0EpC,eAAe1B,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Leaderboard extends Component {\r\n\r\n    state = {\r\n        rankedstats: [],\r\n        accountstats: [],\r\n        isLoading: true,\r\n        errors: null\r\n    };\r\n\r\n    getRankedStats(summonername) {\r\n        axios.get('http://localhost:8000/riotapi/rankedstats', summonername)\r\n            .then(response => {\r\n                this.setState({\r\n                    rankedstats: response.data,\r\n                    isLoading:false\r\n                });\r\n            })\r\n            .catch(error => this.setState({ error, isLoading: false}))\r\n    }\r\n\r\n    getAccountStats(summonername) {\r\n        axios.get('http://localhost:8000/riotapi/lolacc', summonername)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                this.setState({\r\n                    accountstats: response.data,\r\n                    isLoading: false\r\n                });\r\n            })\r\n            .catch(error => this.setState({error, isLoading: false}))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAccountStats();\r\n        this.getRankedStats();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { isLoading } = this.state;\r\n        const sortArray = [].concat(this.state.players)\r\n            .sort((a, b) => b.elo - a.elo);\r\n        var x = 1;\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <h3 className={\"center-align\"}>Leaderboard</h3>\r\n                <div className= \"center-align\">\r\n                    {!isLoading ? (\r\n                        sortArray.map(player => {\r\n                            const { _id, elo, username } = player;\r\n                            return (\r\n                                <div key={_id}>\r\n                                    { x++ }. {\" \"}\r\n                                    {username} {\" \"} {\" \"}\r\n                                    {elo}\r\n                                    <hr />\r\n                                </div>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <p>Loading...</p>\r\n                    )}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Leaderboard;"]},"metadata":{},"sourceType":"module"}