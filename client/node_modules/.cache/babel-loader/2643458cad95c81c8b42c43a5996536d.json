{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\losem\\\\UNI\\\\WebEngineering\\\\Project\\\\lol-app\\\\client\\\\src\\\\components\\\\myStatistics\\\\MyStatistics.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutPlayer } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\n\nclass Leaderboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutPlayer();\n    };\n\n    this.state = {\n      playerData: {},\n      rankedstats: [],\n      accountstats: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  getRankedStats() {\n    axios.get('http://localhost:8000/riotapi/rankedstats/' + this.props.auth.player.id).then(response => {\n      this.setState({\n        rankedstats: response.data.body,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  getAccountStats() {\n    axios.get('http://localhost:8000/riotapi/lolacc/' + this.props.auth.player.id).then(response => {\n      this.setState({\n        accountstats: response.data.body,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  getPlayer() {\n    axios.get('http://localhost:8000/test/getplayer/' + this.props.auth.player.id).then(response => {\n      this.setState({\n        playerData: response.data.data[0],\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.getAccountStats();\n    this.getRankedStats();\n    this.getPlayer();\n  }\n\n  render() {\n    const {\n      isLoading,\n      rankedstats,\n      accountstats,\n      playerData\n    } = this.state;\n    var loggedIn = this.props.auth.isAuthenticated;\n    var playerwithoutSummoner = true;\n    var rankedstatsUndefined = true;\n\n    if (rankedstats == undefined) {\n      rankedstatsUndefined = true;\n    } else {\n      rankedstatsUndefined = false;\n    }\n\n    if (playerData.summonername == undefined) {\n      playerwithoutSummoner = true;\n    } else {\n      playerwithoutSummoner = false;\n    }\n\n    console.log(\"playerData:\");\n    console.log(playerData.summonername);\n    console.log(\"accountstats:\");\n    console.log(accountstats);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, loggedIn ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, \"My Stats\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, playerwithoutSummoner ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-align\",\n      style: {\n        width: \"100%\",\n        border: \"5px solid powderblue\",\n        margin: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, \" Enter your Summonername: \"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    }, \"Name:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 41\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, rankedstatsUndefined ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }, \" Too many requests \") : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 41\n      }\n    }, !isLoading ? rankedstats.map(player => {\n      const {\n        tier,\n        rank,\n        summonerName,\n        queueType\n      } = player;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: queueType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 57\n        }\n      }, queueType, \" \", \" \", tier, \" \", \" \", rank, \" \", \" \", \" \", \" \", summonerName, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 61\n        }\n      }));\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 49\n      }\n    }, \"Loading...\"))))) : /*#__PURE__*/React.createElement(\"p\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, \" You have to to login first\"));\n  }\n\n}\n\nLeaderboard.propTypes = {\n  logoutPlayer: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutPlayer\n})(Leaderboard);","map":{"version":3,"sources":["C:/Users/losem/UNI/WebEngineering/Project/lol-app/client/src/components/myStatistics/MyStatistics.js"],"names":["React","Component","axios","PropTypes","connect","logoutPlayer","Link","Leaderboard","onLogoutClick","e","preventDefault","props","state","playerData","rankedstats","accountstats","isLoading","errors","getRankedStats","get","auth","player","id","then","response","setState","data","body","catch","error","getAccountStats","getPlayer","componentDidMount","render","loggedIn","isAuthenticated","playerwithoutSummoner","rankedstatsUndefined","undefined","summonername","console","log","width","border","margin","handleSubmit","value","handleChange","map","tier","rank","summonerName","queueType","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutPlayer} from \"../../actions/authActions\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Leaderboard extends Component {\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutPlayer();\r\n    };\r\n\r\n    state = {\r\n        playerData: {},\r\n        rankedstats: [],\r\n        accountstats: [],\r\n        isLoading: true,\r\n        errors: null\r\n    };\r\n\r\n    getRankedStats() {\r\n        axios.get('http://localhost:8000/riotapi/rankedstats/' + this.props.auth.player.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    rankedstats: response.data.body,\r\n                    isLoading:false\r\n                });\r\n            })\r\n            .catch(error => this.setState({ error, isLoading: false}))\r\n    }\r\n\r\n    getAccountStats() {\r\n        axios.get('http://localhost:8000/riotapi/lolacc/' + this.props.auth.player.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    accountstats: response.data.body,\r\n                    isLoading: false\r\n                });\r\n            })\r\n            .catch(error => this.setState({error, isLoading: false}))\r\n    }\r\n\r\n    getPlayer() {\r\n        axios.get('http://localhost:8000/test/getplayer/' + this.props.auth.player.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    playerData: response.data.data[0],\r\n                    isLoading: false\r\n                });\r\n            })\r\n            .catch(error => this.setState({error, isLoading: false}))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAccountStats();\r\n        this.getRankedStats();\r\n        this.getPlayer();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { isLoading, rankedstats, accountstats, playerData } = this.state;\r\n\r\n        var loggedIn = this.props.auth.isAuthenticated;\r\n\r\n        var playerwithoutSummoner = true;\r\n        var rankedstatsUndefined = true;\r\n\r\n        if(rankedstats == undefined) {\r\n            rankedstatsUndefined = true;\r\n        }\r\n        else {\r\n            rankedstatsUndefined = false;\r\n        }\r\n        if(playerData.summonername == undefined) {\r\n            playerwithoutSummoner = true;\r\n        }\r\n        else {\r\n            playerwithoutSummoner = false;\r\n        }\r\n\r\n\r\n\r\n        console.log(\"playerData:\");\r\n        console.log(playerData.summonername);\r\n        console.log(\"accountstats:\");\r\n        console.log(accountstats);\r\n\r\n        return (\r\n            <div className={\"center-align\"}>\r\n                {loggedIn ? (\r\n                    <React.Fragment>\r\n                        <h4 className={\"center-align\"}>My Stats</h4>\r\n                        <div className={\"center-align\"}>\r\n                            { playerwithoutSummoner ? (\r\n                                <div className={\"center-align\"} style={{ width: \"100%\", border: \"5px solid powderblue\", margin: \"100%\"}} >\r\n                                    <p> Enter your Summonername: </p>\r\n                                    <form onSubmit={this.handleSubmit}>\r\n                                        <label>\r\n                                            Name:\r\n                                            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n                                        </label>\r\n                                        <input type=\"submit\" value=\"Submit\" />\r\n                                    </form>\r\n                                </div>\r\n\r\n\r\n                            ) : (\r\n                                <div>\r\n                                    {rankedstatsUndefined ? (\r\n                                        <p className={\"center-align\"}> Too many requests </p>\r\n                                    ) : (\r\n                                        <div className= \"center-align\">\r\n                                            {!isLoading ? (\r\n                                                rankedstats.map(player => {\r\n                                                    const { tier, rank, summonerName, queueType } = player;\r\n                                                    return (\r\n                                                        <div key={ queueType }>\r\n                                                            { queueType } {\" \"}\r\n                                                            { tier } {\" \"}\r\n                                                            { rank } {\" \"} {\" \"}\r\n                                                            { summonerName }\r\n                                                            <hr />\r\n                                                        </div>\r\n                                                    );\r\n                                                })\r\n                                            ) : (\r\n                                                <p>Loading...</p>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <p className={\"center-align\"}> You have to to login first</p>\r\n                )}\r\n\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nLeaderboard.propTypes = {\r\n    logoutPlayer: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutPlayer }\r\n)(Leaderboard);"]},"metadata":{},"sourceType":"module"}