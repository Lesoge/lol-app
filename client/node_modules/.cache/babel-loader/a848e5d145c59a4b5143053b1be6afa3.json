{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\losem\\\\UNI\\\\WebEngineering\\\\Project\\\\lol-app\\\\client\\\\src\\\\components\\\\leaderboard\\\\Leaderboard.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nconst columns = [{\n  id: 'placement',\n  label: 'Placement'\n}, {\n  id: 'username',\n  label: 'Username'\n}, {\n  id: 'elo',\n  label: 'Elo'\n}];\nconst rows = [sortArray.map(player => {\n  const {\n    _id,\n    elo,\n    username\n  } = player;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: _id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, x++, \". \", \" \", username, \" \", \" \", \" \", \" \", elo, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }));\n})];\n\nclass Leaderboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  getPlayers() {\n    axios.get('http://localhost:8000/test/getplayers').then(response => {\n      this.setState({\n        players: response.data.data,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.getPlayers();\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    const sortArray = [].concat(this.state.players).sort((a, b) => b.elo - a.elo);\n    var x = 1;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Leaderboard\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center-align\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, !isLoading ? /*#__PURE__*/React.createElement(Paper, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableContainer, {\n      className: classes.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      stickyHeader: true,\n      \"aria-label\": \"sticky table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 41\n      }\n    }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 49\n      }\n    }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        hover: true,\n        role: \"checkbox\",\n        tabIndex: -1,\n        key: row.code,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 49\n        }\n      }, columns.map(column => {\n        const value = row[column.id];\n        return /*#__PURE__*/React.createElement(TableCell, {\n          key: column.id,\n          align: column.align,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 61\n          }\n        }, column.format && typeof value === 'number' ? column.format(value) : value);\n      }));\n    })))), /*#__PURE__*/React.createElement(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    })) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default Leaderboard;","map":{"version":3,"sources":["C:/Users/losem/UNI/WebEngineering/Project/lol-app/client/src/components/leaderboard/Leaderboard.js"],"names":["React","Component","axios","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","rows","sortArray","map","player","_id","elo","username","x","Leaderboard","state","players","isLoading","errors","getPlayers","get","then","response","setState","data","catch","error","componentDidMount","render","concat","sort","a","b","classes","root","container","column","align","minWidth","slice","page","rowsPerPage","row","code","value","format","length","handleChangePage","handleChangeRowsPerPage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst columns = [\r\n    { id: 'placement', label: 'Placement'},\r\n    { id: 'username', label: 'Username'},\r\n    { id: 'elo', label: 'Elo'}\r\n];\r\n\r\nconst rows = [\r\n    sortArray.map(player => {\r\n        const { _id, elo, username } = player;\r\n        return (\r\n            <div key={_id}>\r\n                { x++ }. {\" \"}\r\n                {username} {\" \"} {\" \"}\r\n                {elo}\r\n                <hr />\r\n            </div>\r\n        );\r\n    })\r\n]\r\n\r\n\r\nclass Leaderboard extends Component {\r\n\r\n    state = {\r\n        players: [],\r\n        isLoading: true,\r\n        errors: null\r\n    };\r\n\r\n    getPlayers() {\r\n        axios.get('http://localhost:8000/test/getplayers')\r\n            .then(response => {\r\n                this.setState({\r\n                    players: response.data.data,\r\n                    isLoading:false\r\n                });\r\n            })\r\n            .catch(error => this.setState({ error, isLoading: false}))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPlayers();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { isLoading } = this.state;\r\n        const sortArray = [].concat(this.state.players)\r\n            .sort((a, b) => b.elo - a.elo);\r\n        var x = 1;\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n                <h3 className={\"center-align\"}>Leaderboard</h3>\r\n\r\n                <div className= \"center-align\" >\r\n                    {!isLoading ? (\r\n                        <Paper className={classes.root}>\r\n                            <TableContainer className={classes.container}>\r\n                                <Table stickyHeader aria-label=\"sticky table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            {columns.map((column) => (\r\n                                                <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{ minWidth: column.minWidth }}\r\n                                                >\r\n                                                    {column.label}\r\n                                                </TableCell>\r\n                                            ))}\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                                            return (\r\n                                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                                    {columns.map((column) => {\r\n                                                        const value = row[column.id];\r\n                                                        return (\r\n                                                            <TableCell key={column.id} align={column.align}>\r\n                                                                {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                            </TableCell>\r\n                                                        );\r\n                                                    })}\r\n                                                </TableRow>\r\n                                            );\r\n                                        })}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[10, 25, 100]}\r\n                                component=\"div\"\r\n                                count={rows.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                onChangePage={handleChangePage}\r\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                            />\r\n                        </Paper>\r\n                    ) : (\r\n                        <p>Loading...</p>\r\n                    )}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Leaderboard;"]},"metadata":{},"sourceType":"module"}