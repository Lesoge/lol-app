{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\losem\\\\UNI\\\\WebEngineering\\\\Project\\\\lol-app\\\\client\\\\src\\\\components\\\\leaderboard\\\\Leaderboard.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loadPlayer } from \"../../actions/leaderboard\";\nimport Table from \"react-bootstrap/Table\";\n\nclass Leaderboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  getPlayers() {\n    axios.get('http://localhost:8000/test/getplayers').then(response => {\n      this.setState({\n        players: response.data.data,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.getPlayers();\n  }\n  /*\r\n      componentDidMount()\r\n      {\r\n          axios.get('http://localhost:8000/test/getplayers')\r\n              .then(response => {\r\n                  console.log(response.data.data)\r\n                  this.props({data: response.data.data});\r\n              })\r\n              .catch(error => {\r\n                  console.log(error);\r\n              })\r\n      }\r\n  */\n\n\n  render() {\n    const {\n      player\n    } = this.props.auth;\n    const {\n      isLoading,\n      players\n    } = this.state;\n    const sortArray = [].concat(this.state.players).sort((a, b) => b.elo - a.elo);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Leaderboard\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, !isLoading ? sortArray.map(player => {\n      const {\n        _id,\n        elo,\n        username,\n        email\n      } = player;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: _id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, sortArray.indexOf(elo), username, elo, /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }\n      }));\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"Loading...\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  loadPlayer\n})(Leaderboard);","map":{"version":3,"sources":["C:/Users/losem/UNI/WebEngineering/Project/lol-app/client/src/components/leaderboard/Leaderboard.js"],"names":["React","Component","axios","PropTypes","connect","loadPlayer","Table","Leaderboard","state","players","isLoading","errors","getPlayers","get","then","response","setState","data","catch","error","componentDidMount","render","player","props","auth","sortArray","concat","sort","a","b","elo","map","_id","username","email","indexOf","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAGA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCO,KAFgC,GAExB;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KAFwB;AAAA;;AAQhCC,EAAAA,UAAU,GAAG;AACTV,IAAAA,KAAK,CAACW,GAAN,CAAU,uCAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AACVP,QAAAA,OAAO,EAAEM,QAAQ,CAACE,IAAT,CAAcA,IADb;AAEVP,QAAAA,SAAS,EAAC;AAFA,OAAd;AAIH,KANL,EAOKQ,KAPL,CAOWC,KAAK,IAAI,KAAKH,QAAL,CAAc;AAAEG,MAAAA,KAAF;AAAST,MAAAA,SAAS,EAAE;AAApB,KAAd,CAPpB;AAQH;;AAEDU,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,UAAL;AACH;AAED;;;;;;;;;;;;;;;AAeAS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKC,KAAL,CAAWC,IAA9B;AACA,UAAM;AAAEd,MAAAA,SAAF;AAAaD,MAAAA;AAAb,QAAyB,KAAKD,KAApC;AACA,UAAMiB,SAAS,GAAG,GAAGC,MAAH,CAAU,KAAKlB,KAAL,CAAWC,OAArB,EACbkB,IADa,CACR,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,GAAF,GAAQF,CAAC,CAACE,GADZ,CAAlB;AAIA,wBAGI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACpB,SAAD,GACGe,SAAS,CAACM,GAAV,CAAcT,MAAM,IAAI;AACpB,YAAM;AAAEU,QAAAA,GAAF;AAAOF,QAAAA,GAAP;AAAYG,QAAAA,QAAZ;AAAsBC,QAAAA;AAAtB,UAA+BZ,MAArC;AACA,0BACI;AAAK,QAAA,GAAG,EAAEU,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,SAAS,CAACU,OAAV,CAAkBL,GAAlB,CADL,EAEKG,QAFL,EAGKH,GAHL,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAQH,KAVD,CADH,gBAaG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdR,CAHJ,CAHJ;AAyBH;;AAtE+B;;AA2EpC,MAAMM,eAAe,GAAG5B,KAAK,KAAK;AAC9BgB,EAAAA,IAAI,EAAEhB,KAAK,CAACgB;AADkB,CAAL,CAA7B;;AAIA,eAAepB,OAAO,CAClBgC,eADkB,EAElB;AAAE/B,EAAAA;AAAF,CAFkB,CAAP,CAGbE,WAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadPlayer } from \"../../actions/leaderboard\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\n\r\nclass Leaderboard extends Component {\r\n\r\n    state = {\r\n        players: [],\r\n        isLoading: true,\r\n        errors: null\r\n    };\r\n\r\n    getPlayers() {\r\n        axios.get('http://localhost:8000/test/getplayers')\r\n            .then(response => {\r\n                this.setState({\r\n                    players: response.data.data,\r\n                    isLoading:false\r\n                });\r\n            })\r\n            .catch(error => this.setState({ error, isLoading: false}))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPlayers();\r\n    }\r\n\r\n    /*\r\n        componentDidMount()\r\n        {\r\n            axios.get('http://localhost:8000/test/getplayers')\r\n                .then(response => {\r\n                    console.log(response.data.data)\r\n                    this.props({data: response.data.data});\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }\r\n    */\r\n\r\n\r\n    render() {\r\n        const { player } = this.props.auth;\r\n        const { isLoading, players } = this.state;\r\n        const sortArray = [].concat(this.state.players)\r\n            .sort((a, b) => b.elo - a.elo)\r\n\r\n\r\n        return (\r\n\r\n\r\n            <React.Fragment>\r\n                <h3>Leaderboard</h3>\r\n\r\n                <div>\r\n                    {!isLoading ? (\r\n                        sortArray.map(player => {\r\n                            const { _id, elo, username, email} = player;\r\n                            return (\r\n                                <div key={_id}>\r\n                                    {sortArray.indexOf(elo)}\r\n                                    {username}\r\n                                    {elo}\r\n                                    <hr />\r\n                                </div>\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <p>Loading...</p>\r\n                    )}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { loadPlayer }\r\n)(Leaderboard);"]},"metadata":{},"sourceType":"module"}